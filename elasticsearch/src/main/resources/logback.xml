<!-- 
scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<property resource="application.yml" />
	<property name="LOG_FILE" value="./logs/elasticsearch" />
	<!-- appender负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名 -->
	<!-- 把日志都输出到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 对日志进行格式化 -->
		<encoder>
			<pattern>%d{MM-dd HH:mm:ss.SSS} %-5level %logger{36}:%line - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 把日志添加到文件 -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值 -->
		<File>${LOG_FILE}.log</File>
		<append>true</append>
		<encoder>
			<pattern>%d{MM-dd HH:mm:ss.SSS} %-5level %logger{36}:%line - %m%n</pattern>
		</encoder>
		<!-- 上述配置表示每天生成一个日志文件，保存30份的日志文件 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
	</appender>

	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</root>
	<logger name="org.apache.curator" level="ERROR" />
	<logger name="org.springframework" level="ERROR" />
	<logger name="org.apache.commons" level="ERROR" />
	<logger name="com.framework" level="DEBUG" />
	<logger name="com.netflix.discovery.DiscoveryClient" level="WARN" />

	<!--myibatis log configure -->
	<logger name="com.apache.ibatis" level="TRACE" />
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
</configuration>